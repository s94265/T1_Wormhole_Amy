@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<head>
    <link href="~/assets/css/amy.css" rel="stylesheet" />
</head>
@*Tab Bar*@
@* <div id="TabBar" class="TabBar"> *@
@*     <ul class="row"> *@
@*         <li class="col-6"><a class="nav-link TabBar-a" asp-controller="Home" asp-action="Index">Home</a></li> *@
@*         <li class="col-6"><a class="nav-link TabBar-a" asp-controller="Obtain" asp-action="Index">Obtain</a></li> *@
        
@*     </ul> *@
@* </div> *@
@*wraaper*@
<div class="row mt-3 mb-5 wrapper" id="app">
    @*Sider*@
    @* <div id="SiderBar">
        <ul>
            <li></li>
        </ul>
    </div> *@
    @*Context*@
    @* 活動列表(顯示活動詳細內容時隱藏) *@
    <div v-if="showDetail==false">
        <ul class="row p-5 align-items-center">
            <li v-for="event in events" class="col-3 event-box m-md-1">
                <a @@click.prevent="readEvent(event)" class="event-context wormhole-word-event">
                <img class="event-img" :src="getEventImage(event.type)" />
                    {{event.title}}
                </a>
            </li>
        </ul>
    </div>
    
    @* 活動詳細內容(返回活動列表時隱藏) *@
    <div v-else>
        <div class="container">
            <div class=" posts-list">
                <div class="single-post">
                    <div class="EventsPicture mt-5">
						@* <img class="img-fluid" src="assets/img/blog/single_blog_1.jpg" alt=""> *@
                        <img class="img-fluid" :src="getEventImage(currentEvent.type)" />
                    </div>
                    <div class="blog_details">
                        <h2 style="color: #2d2d2d;">
                            {{currentEvent.title}}
                        </h2>
                        <ul class="blog-info-link mt-3 mb-4">
                            <li>開始時間:{{currentEvent.eventTimeStrat}}</li>
                            <li>截止時間:{{currentEvent.eventTimeEnd}}</li>
                        </ul>
                        <p class="excert">
                            {{currentEvent.eventContent}}
                        </p>
                        <div class="row-cols-5 d-flex justify-content-center">
                            <button @@click="showDetail=false" class="genric-btn primary-border radius">返回活動列表</button>
                            <button @@click="joinEvent(currentEvent)" class="genric-btn primary radius ml-10">參加活動</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    Vue.createApp({
        data(){
            return{
                events:[],
                currentEvent:{},
                showDetail:false,
                userID:{},
            }
        },
        methods:{
            //----------顯示活動列表----------
            async getAllEvent(){
                // alert("抓取活動列表");
                let self=this;
                await fetch("/api/EventObtain/getAllEvent",{
                    credentials: 'include',
                }).then(response=>{
                    if(response.ok){
                       return response.json();
                    }
                }).then(data=>{
                    // alert(JSON.stringify(data));
                    self.events=data;

                }).catch(err=>{
                    alert(err);
                });
                //抓取當前user
                await fetch("/api/EventObtain/getUser",{
                    credentials: 'include',
                }).then(x => x.json()).then(res => self.userID=res);
            },
            //----------顯示活動列表----------
            //依照類型切換顯示圖片
            getEventImage(type)
            {
				switch(type) {
			        case '徵文活動':
                        return '/images/events/articleEvent.png';
			        case '留言活動':
                        return '/images/events/discussEvent.png';
			        default:
                        return '/images/events/defaultEvent.png';

		        }
            },
            //----------顯示活動列表----------
            //----------讀取活動--------------
            readEvent(event)
            {
                let self=this;
                // alert(JSON.stringify(event));
                self.currentEvent=event;
                
                // alert(self.currentEvent);
                self.showDetail=true;
            },
            //----------讀取活動--------------
            //----------參加活動--------------
            //送出userID、活動ID、參加時間(後端)、狀態(參加中)
            //(後端確認無參加資料)
            async joinEvent(event){
                let self=this;
                //要包裝成後端dto可以接的data
                let joinData=
                {
                    eventId:event.eventId,
                    userId:self.userID,
                };
                await fetch("/api/EventObtain/joinEvent",{
                    method:"POST",
                    body:JSON.stringify(joinData),//傳送格式
                    headers:{//headers:內容格式
                        "content-type":"application/json"
                    }
                }).then(response=>{
                    return response.text();
                }).then(data=>{
                    alert(data);
                    self.showDetail=false;
                }).catch(err=>{
                    alert("活動參與失敗，請再次嘗試");
                });
            }
            //----------參加活動--------------
        },
        mounted() {
           this.getAllEvent();
        }
    }).mount("#app");
</script>

